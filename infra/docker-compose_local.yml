version: '3.3'
name: foodgram

services:

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    container_name: frontend

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/etc/nginx/html/static/
      - media_value:/etc/nginx/html/media/
    container_name: nginx
    depends_on:
      - back
      - frontend

  db:
    image: postgres:13.0-alpine
    ports: 
      - 5432:5432
    command: postgres -c listen_addresses=*
    restart: always
    volumes:
      - db_value:/var/lib/postgresql/data/
      - ../data/:/tmp/data/
    env_file:
      - ./.env

    container_name: postgres

  back:
    build:
      context: ../backend/foodgram
      dockerfile: Dockerfile
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    ports:
     - "8000:8000"
    depends_on:
      - db
    env_file:
      - ./.env 
    container_name: django-backend

volumes:
  db_value:
  static_value:
  media_value:

